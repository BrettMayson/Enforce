enforce = { SOI ~ (statement)* ~ EOI}

statement = _{
  (assignment ~ ";") |
  (call ~ ";") |
  eif
}

assignment = { etype? ~ ident ~ assignment_operator ~ (value | statement) }
assignment_operator = { "=" | "+=" }

etype = { "int" | "string" | "bool" }

value = _{ bool | ident | int | string }
ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
bool = @{ "true" | "false" }
int = @{ ASCII_DIGIT+ }
string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

call = { ident ~ ("(" ~ args ~ ")" | "()") }
args = { (value | statement) ~ ("," ~ (value | statement))* }

eif = { "if" ~ "(" ~ logic_expr ~ ")" ~ "{" ~ statement* ~ "}" }

logic_val  = !{ op_not? ~ comparison_expr }
logic_expr = !{ logic_val ~ (op ~ logic_val)* }
op = { "||" | "&&" }
op_not = { "!" }

comparison_op   = { "<=" | ">=" | ">" | "<" | "==" | "!=" }
comparison_expr = { (call | value) ~ (comparison_op ~ (call | value))? }

COMMENT = _{ "//" ~ (!"\n" ~ ANY)* ~ "\n" | "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
WHITESPACE = _{ " " | "\t" | "\r" | (!"\\" ~ "\n") }
